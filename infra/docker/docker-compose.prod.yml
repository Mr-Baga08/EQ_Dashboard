# infra/docker/docker-compose.prod.yml
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trading-net
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  redis:
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - trading-net
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  backend:
    image: trading-platform/backend:latest
    restart: always
    environment:
      POSTGRES_SERVER: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      REDIS_HOST: redis
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MOTILAL_BASE_URL: https://openapi.motilaloswal.com
      MOTILAL_API_KEY: ${MOTILAL_API_KEY}
      SECRET_KEY: ${SECRET_KEY}
      DEBUG: "false"
    volumes:
      - ./data:/app/data
    depends_on:
      - postgres
      - redis
    networks:
      - trading-net
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  frontend:
    image: trading-platform/frontend:latest
    restart: always
    environment:
      NEXT_PUBLIC_API_URL: https://api.yourdomain.com/api/v1
      NEXT_PUBLIC_WS_URL: wss://api.yourdomain.com
    depends_on:
      - backend
    networks:
      - trading-net
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - trading-net

volumes:
  postgres_data:
  redis_data:

networks:
  trading-net:
    driver: bridge
